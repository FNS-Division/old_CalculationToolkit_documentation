{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Calculation Tools Documentation","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Welcome to the documentation for the Calculation Tools suite. This project comprises three powerful tools designed to assist in the planning and deployment of broadband networks. These tools are vital for making informed decisions about technology selection and cost estimation for various types of broadband network deployments.</p>"},{"location":"#tools-overview","title":"Tools Overview","text":""},{"location":"#broadband-calculation-tool-schools","title":"Broadband Calculation Tool: Schools","text":"<p>This tool is designed to calculate the costs and select the appropriate technologies needed to connect schools to the Internet. It evaluates both internal school computer networks and their connections to broadband access networks, helping to choose the optimal network deployment options in terms of capital and operational expenses.</p>"},{"location":"#broadband-calculation-tool-countries","title":"Broadband Calculation Tool: Countries","text":"<p>This tool focuses on calculating the costs and selecting technologies required to connect unconnected localities to the broadband transport backbone and build broadband access networks. The results are presented as \u201cCountry Blueprints,\u201d which provide a summary of analysis and calculations based on a comprehensive localities database, utilizing data from OpenStreetMap, GeoNames, ITU Broadband Maps, and other sources.</p>"},{"location":"#broadband-calculation-tool-global","title":"Broadband Calculation Tool: Global","text":"<p>Similar to the Countries tool, this global tool is designed to calculate the costs and select technologies for connecting unconnected localities on a broader scale. It also generates \u201cCountry Blueprints\u201d that summarize analysis and calculations, drawing on data from global geodata projects and mapping resources.</p>"},{"location":"#definitions","title":"Definitions","text":"<p>Old tool is the original and unaltered tool. This is in its original state and has not been modified or updated</p> <p>Modified tool is the updated version of the old tool. This version has edits made, package and version updates, and frontend edits </p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before using these tools, ensure that your environment meets the necessary prerequisites:</p> <ul> <li>Docker</li> <li>Node</li> <li>npm</li> <li>pyenv</li> <li>PHP</li> </ul> <p>For detailed prerequisites, see:</p> <ul> <li>Old Version Prerequisites</li> <li>Modified Version Prerequisites</li> </ul>"},{"location":"#contribution-and-feedback","title":"Contribution and Feedback","text":"<p>We welcome contributions from the community! Please refer to the Contribution Guidelines for more information on how to contribute to this project. If you have any feedback or encounter any issues, feel free to contact us at fns@itu.int.</p>"},{"location":"#changelog","title":"Changelog","text":"<p>All modifications from the old version to the new version, including updates to packages, versions, and features like npm shrinkwrap, are documented in the Changelog.</p>"},{"location":"#quick-links","title":"Quick Links","text":"<p>For additional resources and helpful guides, please visit the following:</p> <ul> <li>Help and Documentation</li> </ul>"},{"location":"#direct-links-to-toolkits","title":"Direct Links to Toolkits","text":"<ul> <li>Old Toolkit : Access the Old Toolkit</li> <li>Modified Toolkit : Access the Modified Toolkit</li> </ul>"},{"location":"cloud/aws_deployment_guide/","title":"This guide provides instructions for deploying the Dockerized Calculation Tools project to AWS.","text":""},{"location":"cloud/aws_deployment_guide/#1-prerequisites","title":"1. Prerequisites","text":"<p>Before deploying to AWS, ensure you have the following:</p> <ul> <li>AWS Account: An AWS account with appropriate permissions.</li> <li>AWS CLI: Install and configure the AWS CLI on your local machine.</li> <li>Docker Installed: Ensure Docker is installed and running on your local machine.</li> </ul>"},{"location":"cloud/aws_deployment_guide/#2-pushing-docker-images-to-aws-ecr","title":"2. Pushing Docker Images to AWS ECR","text":""},{"location":"cloud/aws_deployment_guide/#21-set-up-amazon-ecr","title":"2.1 Set Up Amazon ECR","text":"<ol> <li> <p>Create an ECR Repository:</p> </li> <li> <p>Navigate to the Amazon ECR console.</p> </li> <li>Create a new repository for your Docker images (e.g., <code>calculation-tools-repo</code>).</li> </ol>"},{"location":"cloud/aws_deployment_guide/#22-authenticate-and-push-docker-images","title":"2.2 Authenticate and Push Docker Images","text":"<ol> <li> <p>Authenticate Docker to ECR:</p> </li> <li> <p>Run the following command to authenticate Docker with ECR:</p> <p><code>aws ecr get-login-password --region &lt;region&gt; | docker login --username AWS --password-stdin &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com</code></p> </li> <li> <p>Tag and Push Your Docker Image:</p> </li> <li> <p>Tag the Docker image for your project:</p> <p><code>docker tag calculationtools_api-backend &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/calculation-tools-repo:latest</code></p> </li> <li> <p>Push the Docker image to the ECR repository:</p> <p><code>docker push &lt;aws_account_id&gt;.dkr.ecr.&lt;region&gt;.amazonaws.com/calculation-tools-repo:latest</code></p> </li> </ol>"},{"location":"cloud/aws_deployment_guide/#3-deploying-docker-containers-on-aws","title":"3. Deploying Docker Containers on AWS","text":""},{"location":"cloud/aws_deployment_guide/#31-using-amazon-ecs","title":"3.1 Using Amazon ECS","text":"<ol> <li> <p>Create an ECS Cluster:</p> </li> <li> <p>Go to the Amazon ECS console and create a new cluster.</p> </li> <li> <p>Define a Task Definition:</p> </li> <li> <p>Create a new task definition specifying the container image from ECR, along with CPU, memory, and networking configurations.</p> </li> <li> <p>Run the Task:</p> </li> <li> <p>Deploy the container by running the task in the ECS cluster.</p> </li> </ol>"},{"location":"cloud/aws_deployment_guide/#32-auto-scaling-and-load-balancing","title":"3.2 Auto-Scaling and Load Balancing","text":"<ol> <li> <p>Configure Auto Scaling:</p> </li> <li> <p>Set up auto-scaling for your ECS service based on CPU and memory usage.</p> </li> <li> <p>Set Up a Load Balancer:</p> </li> <li> <p>Use an Application Load Balancer (ALB) to distribute traffic across multiple containers.</p> </li> </ol>"},{"location":"cloud/aws_deployment_guide/#4-post-deployment-tasks","title":"4. Post-Deployment Tasks","text":""},{"location":"cloud/aws_deployment_guide/#41-monitoring-and-logging","title":"4.1 Monitoring and Logging","text":"<ul> <li>Use Amazon CloudWatch to monitor your ECS cluster and containers.</li> <li>Set up CloudWatch Logs to capture and analyze container logs.</li> </ul>"},{"location":"cloud/aws_deployment_guide/#42-security-configuration","title":"4.2 Security Configuration","text":"<ul> <li>Use AWS IAM roles to ensure containers have the least privilege necessary.</li> <li>Configure security groups and network ACLs to control inbound and outbound traffic.</li> </ul>"},{"location":"cloud/aws_deployment_guide/#5-maintenance-and-updates","title":"5. Maintenance and Updates","text":""},{"location":"cloud/aws_deployment_guide/#51-updating-containers","title":"5.1 Updating Containers","text":"<ul> <li>Rebuild and Push: When updates are made, rebuild the Docker image and push it to ECR.</li> <li>Rolling Updates: Deploy updates using ECS with minimal downtime.</li> </ul>"},{"location":"cloud/aws_deployment_guide/#52-backup-and-recovery","title":"5.2 Backup and Recovery","text":"<ul> <li>Regularly back up any persistent data stored in AWS services.</li> <li>Document and test recovery procedures.</li> </ul>"},{"location":"cloud/azure_deployment_guide/","title":"This guide provides instructions for deploying the Dockerized Calculation Tools project to Azure.","text":""},{"location":"cloud/azure_deployment_guide/#1-prerequisites","title":"1. Prerequisites","text":"<p>Before deploying to Azure, ensure you have the following:</p> <ul> <li>Azure Account: An Azure account with appropriate permissions.</li> <li>Azure CLI: Install and configure the Azure CLI on your local machine.</li> <li>Docker Installed: Ensure Docker is installed and running on your local machine.</li> </ul>"},{"location":"cloud/azure_deployment_guide/#2-pushing-docker-images-to-azure-container-registry-acr","title":"2. Pushing Docker Images to Azure Container Registry (ACR)","text":""},{"location":"cloud/azure_deployment_guide/#21-set-up-azure-container-registry","title":"2.1 Set Up Azure Container Registry","text":"<ol> <li> <p>Create an ACR:</p> </li> <li> <p>Navigate to the Azure portal.</p> </li> <li>Create a new Azure Container Registry (ACR) for your Docker images.</li> </ol>"},{"location":"cloud/azure_deployment_guide/#22-authenticate-and-push-docker-images","title":"2.2 Authenticate and Push Docker Images","text":"<ol> <li> <p>Login to Azure Container Registry:</p> </li> <li> <p>Run the following command to authenticate Docker with ACR:</p> <p><code>az acr login --name &lt;registry_name&gt;</code></p> </li> <li> <p>Tag and Push Your Docker Image:</p> </li> <li> <p>Tag the Docker image for your project:</p> <p><code>docker tag calculationtools_api-backend &lt;registry_name&gt;.azurecr.io/calculation-tools-repo:latest</code></p> </li> <li> <p>Push the Docker image to the ACR repository:</p> <p><code>docker push &lt;registry_name&gt;.azurecr.io/calculation-tools-repo:latest</code></p> </li> </ol>"},{"location":"cloud/azure_deployment_guide/#3-deploying-docker-containers-on-azure","title":"3. Deploying Docker Containers on Azure","text":""},{"location":"cloud/azure_deployment_guide/#31-using-azure-container-instances-aci","title":"3.1 Using Azure Container Instances (ACI)","text":"<ol> <li> <p>Create a Container Group:</p> </li> <li> <p>In the Azure portal, create a new container group.</p> </li> <li> <p>Specify the image from ACR and configure CPU, memory, and networking settings.</p> </li> <li> <p>Run the Container:</p> </li> <li> <p>Deploy the container by starting the container group.</p> </li> </ol>"},{"location":"cloud/azure_deployment_guide/#32-scaling-and-load-balancing","title":"3.2 Scaling and Load Balancing","text":"<ol> <li> <p>Configure Auto-Scaling:</p> </li> <li> <p>Set up auto-scaling for your container instances using Azure Monitor.</p> </li> <li> <p>Set Up a Load Balancer:</p> </li> <li> <p>Use an Azure Load Balancer to distribute traffic across multiple containers.</p> </li> </ol>"},{"location":"cloud/azure_deployment_guide/#4-post-deployment-tasks","title":"4. Post-Deployment Tasks","text":""},{"location":"cloud/azure_deployment_guide/#41-monitoring-and-logging","title":"4.1 Monitoring and Logging","text":"<ul> <li>Use Azure Monitor to track the performance of your container instances.</li> <li>Set up Azure Log Analytics to capture and analyze container logs.</li> </ul>"},{"location":"cloud/azure_deployment_guide/#42-security-configuration","title":"4.2 Security Configuration","text":"<ul> <li>Use Azure Role-Based Access Control (RBAC) to manage access to resources.</li> <li>Configure network security groups (NSGs) to manage inbound and outbound traffic.</li> </ul>"},{"location":"cloud/azure_deployment_guide/#5-maintenance-and-updates","title":"5. Maintenance and Updates","text":""},{"location":"cloud/azure_deployment_guide/#51-updating-containers","title":"5.1 Updating Containers","text":"<ul> <li>Rebuild and Push: Rebuild the Docker image and push it to ACR when updates are made.</li> <li>Rolling Updates: Use Azure Kubernetes Service (AKS) or similar to deploy updates with minimal downtime.</li> </ul>"},{"location":"cloud/azure_deployment_guide/#52-backup-and-recovery","title":"5.2 Backup and Recovery","text":"<ul> <li>Regularly back up any persistent data stored in Azure services.</li> <li>Document and test recovery procedures.</li> </ul>"},{"location":"cloud/deployment_guide/","title":"Requirements","text":"<p>This guide provides instructions for deploying the Dockerized Calculation Tools project to a cloud environment.</p>"},{"location":"cloud/deployment_guide/#1-prerequisites","title":"1. Prerequisites","text":"<p>Ensure you have the following before deploying:</p> <ul> <li>Cloud Account : An account with the cloud provider (e.g., AWS, Azure) with necessary permissions.</li> <li>Docker Installed : Docker should be installed on your local machine or CI/CD agent.</li> <li>CLI Tools : The cloud provider's CLI tools (e.g., AWS CLI, Azure CLI) should be installed.</li> </ul>"},{"location":"cloud/docker/","title":"Docker Setups","text":"<p>Below is a comprehensive, guide on how to set up Docker for local development (on your computer) and how to run Docker in  production on AWS . It covers installation, basic usage, and a few different AWS deployment approaches so you can pick what best fits your project.</p>"},{"location":"cloud/docker/#part-1-local-setup-on-your-computer","title":"Part 1: Local Setup on Your Computer","text":""},{"location":"cloud/docker/#1-install-docker","title":"1. Install Docker","text":"<ol> <li>Windows :    Install Docker Desktop    Make sure WSL2 (Windows Subsystem for Linux) is enabled.    Verify after installation by running in PowerShell or Command Prompt:    docker version docker-compose version    You should see both client and server versions.</li> <li>macOS :    Install Docker Desktop for MacVerify installation in Terminal:    docker version docker-compose version</li> <li>Linux :    Install Docker Engine (for example, on Ubuntu):    sudo apt-get update sudo apt-get install ca-certificates curl gnupg lsb-release curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null sudo apt-get update sudo apt-get install docker-ce docker-ce-cli containerd.io    Install Docker Compose (if not included by default):    sudo apt-get install docker-compose    Verify:    docker version docker-compose version</li> </ol>"},{"location":"cloud/docker/#2-dockerizing-your-application","title":"2. Dockerizing Your Application","text":""},{"location":"cloud/docker/#example-project-structure","title":"Example Project Structure:","text":"<p>my-app/ docker-compose.yml backend/ Dockerfile (For the backend)     src/ (Application source code)   frontend/ Dockerfile (For the frontend)     ...</p>"},{"location":"cloud/docker/#docker-composeyml-example","title":"docker-compose.yml Example:","text":"<p>version: '3.8' services: backend: build: context: ./backend dockerfile: Dockerfile ports: - \"8080:80\" environment: - MYSQL_HOST=mysql - MYSQL_PORT=3306 - MYSQL_DATABASE=my_db - MYSQL_USER=my_user - MYSQL_PASSWORD=my_password depends_on: - mysql</p> <p>frontend: build: context: ./frontend dockerfile: Dockerfile ports: - \"3000:3000\" depends_on: - backend</p> <p>mysql: image: mysql:5.7 environment: MYSQL_ROOT_PASSWORD: rootpassword MYSQL_DATABASE: my_db MYSQL_USER: my_user MYSQL_PASSWORD: my_password ports: - \"3306:3306\" volumes: - my-db-volume:/var/lib/mysql</p> <p>volumes: my-db-volume:</p> <ol> <li>Backend service exposes port 80 inside the container, mapped to 8080 on the host machine, and depends on MySQL.</li> <li>Frontend service exposes 3000 inside the container, mapped to 3000 on the host, and depends on  backend .</li> <li>MySQL uses the mysql:5.7 image with environment variables for database credentials.</li> </ol>"},{"location":"cloud/docker/#3-common-docker-commands","title":"3. Common Docker Commands","text":"<p>docker-compose build \u2013 Build (or rebuild) images. docker-compose build --no-cache \u2013 Build without using cache (forces a fresh build). docker-compose up -d \u2013 Start containers in background mode. docker-compose up \u2013 Start containers with logs in the terminal. docker-compose stop \u2013 Stop containers. docker-compose down \u2013 Remove containers (and network), but keep volumes. docker-compose down -v \u2013 Remove containers + volumes. docker-compose logs -f backend \u2013 Follow logs for the backend service.</p>"},{"location":"cloud/docker/#4-testing-locally","title":"4. Testing Locally","text":"<ul> <li>Backend : Access on  http://localhost:8080 .</li> <li>Frontend : Access on  http://localhost:8000.</li> <li>MySQL : If you have a DB client on your host, connect to  localhost:3306 .</li> </ul>"},{"location":"cloud/docker/#part-2-deploying-on-aws-for-production","title":"Part 2: Deploying on AWS for Production","text":"<p>Below are a few common ways to run Dockerized apps on AWS. Choose the approach that fits your team\u2019s size, budget, and expertise.</p>"},{"location":"cloud/docker/#option-a-using-aws-ec2-docker-compose","title":"Option A: Using AWS EC2 + Docker Compose","text":"<ol> <li>Create an EC2 instance (Amazon Linux, Ubuntu, or your distro of choice).</li> <li>Install Docker on the EC2 instance.</li> <li>Copy your project to the EC2 instance (via Git clone, SCP, etc.).</li> <li>Run docker-compose up -d on the EC2 to start your containers.</li> </ol>"},{"location":"cloud/docker/#example-steps-on-ec2","title":"Example Steps on EC2:","text":"<ol> <li>SSH into EC2:    ssh -i /path/to/key.pem ec2-user@<code>&lt;EC2-Public-IP&gt;</code></li> <li>Install Docker (steps vary by OS).</li> <li>Clone or copy your code:    git clone https://github.com/<code>&lt;your-repo&gt;</code>.git</li> <li>Build and run :    cd my-app docker-compose up -d</li> </ol>"},{"location":"cloud/docker/#option-b-aws-ecs-elastic-container-service-with-fargate","title":"Option B: AWS ECS (Elastic Container Service) with Fargate","text":"<p>ECS + Fargate is a serverless container hosting solution. You don\u2019t manage EC2 instances directly.</p> <ol> <li>Push your images to a container registry (e.g.,  Amazon ECR ).</li> <li>Create an ECS Cluster and pick Fargate as the launch type.</li> <li>Create a Task Definition in ECS that references your container image(s) from ECR.</li> <li>Create a Service in ECS to run tasks (containers) with load balancing or auto-scaling if needed.</li> </ol>"},{"location":"cloud/docker/#high-level-steps","title":"High-Level Steps","text":"<ol> <li>Build container images locally:    docker build -t my-backend:latest ./backend</li> <li>Tag and Push to ECR:    docker tag my-backend:latest .dkr.ecr.<code>&lt;region&gt;</code>.amazonaws.com/my-backend:latest docker push .dkr.ecr.<code>&lt;region&gt;</code>.amazonaws.com/my-backend:latest <li>Create ECS Task Definition referencing your ECR images.</li> <li>Run ECS Service that starts tasks.</li> <li>Attach an Application Load Balancer (ALB) if you want to route traffic from the internet.</li>"},{"location":"cloud/docker/#managing-production-secrets-environment-variables","title":"Managing Production Secrets &amp; Environment Variables","text":"<p>You\u2019ll need to manage environment variables (like DB passwords). Options:</p> <ul> <li>AWS Systems Manager Parameter Store or Secrets Manager (recommended for secure storage).</li> <li>.env Files (be careful not to commit secrets to version control).</li> <li>Passing them directly in ECS Task Definitions.</li> </ul>"},{"location":"cloud/docker/#prune-and-maintenance-commands","title":"Prune and Maintenance Commands","text":"<ul> <li>docker system prune : Removes unused containers, networks, images.</li> <li>docker image prune -a : Removes all unused images (not just dangling).</li> <li>docker volume prune : Removes unused volumes.</li> </ul>"},{"location":"code_structure/overview/","title":"Overview","text":"<p>This document outlines the key folders and files in the Calculation Tools project, detailing their purposes and suggesting areas for improvement.</p>"},{"location":"code_structure/overview/#1-key-folders-in-the-app-directory","title":"1. Key Folders in the <code>App</code> Directory","text":"<p>The main project files are located in the <code>App</code> folder, which is organized into various subfolders based on functionality.</p> <p></p>"},{"location":"code_structure/overview/#11-about-folder","title":"1.1 About Folder","text":"<ul> <li>Purpose : Contains all the pages related to the \u201cAbout\u201d section of the project, such as the \u201cAbout Us\u201d information.</li> <li>Modification Point : This is where any informational changes or updates to the \"About Us\" page can be made.</li> </ul>"},{"location":"code_structure/overview/#12-account-folder","title":"1.2 Account Folder","text":"<ul> <li>Purpose : Contains files for handling account-related functionalities, including:</li> <li>Signup</li> <li>Login</li> <li>Modification Point : You can modify or update the user authentication logic here.</li> </ul>"},{"location":"code_structure/overview/#13-admin-folder","title":"1.3 Admin Folder","text":"<ul> <li>Purpose : Contains files related to admin functionalities.</li> <li>Current Limitation : These files are not currently accessible via browser links.</li> <li>Modification Point : If admin pages need to be made accessible or enabled, you can update the routing or security access controls here.</li> </ul>"},{"location":"code_structure/overview/#14-blueprint-wizard-folder","title":"1.4 Blueprint Wizard Folder","text":"<ul> <li>Purpose : Contains the multistep wizards for different projects. Here, you can modify steps or adjust formulas for each project.</li> <li>Global Wizard : Used for handling global blueprint steps.</li> <li>School Wizard : Specifically used for multistep wizards related to school projects.</li> <li>Country Wizard : Used for blueprint steps related to country-based projects.</li> <li>Modification Point : Customize the steps and logic used within the wizard based on new requirements or data.</li> </ul>"},{"location":"code_structure/overview/#15-multischool-wizard-folder","title":"1.5 Multischool Wizard Folder","text":"<ul> <li>Purpose : Specifically contains the multistep wizard functionality for school-related projects.</li> <li>Modification Point : This is where you can modify the school's wizard steps if new steps or conditions need to be added.</li> </ul>"},{"location":"code_structure/overview/#16-feedback-folder","title":"1.6 Feedback Folder","text":"<ul> <li>Purpose : Designed to collect client/user feedback.</li> <li>Current Limitation : Not functional.</li> <li>Modification Point : This section can be activated to collect user feedback, potentially improving the user experience.</li> </ul>"},{"location":"code_structure/overview/#2-backend-files-server-directory","title":"2. Backend Files (Server Directory)","text":"<p>The backend of the project is powered by PHP and located in the <code>server</code> directory. These files manage the application's core functionalities, including API routing, database interactions, and server-side logic.</p> <p>Connection file logic</p> <p></p> <p>Calculations logic folder</p> <p></p> <ul> <li>Key Points :</li> <li>Slim Framework is used for routing and handling API requests.</li> <li>PHP scripts manage various backend operations like handling form submissions, database queries, and more.</li> </ul>"},{"location":"code_structure/overview/#3-frontend-structure","title":"3. Frontend Structure","text":"<p>The frontend is Angular-based, and the core functionalities are distributed across multiple folders.</p>"},{"location":"code_structure/overview/#31-about-folder","title":"3.1 About Folder","text":"<ul> <li>Purpose : Contains pages related to the \"About Us\" section of the application.</li> </ul>"},{"location":"code_structure/overview/#32-admin-folder","title":"3.2 Admin Folder","text":"<ul> <li>Purpose : Contains pages related to administrative functions that the admin can manage.</li> </ul>"},{"location":"code_structure/overview/#33-blueprint-wizard-folder","title":"3.3 Blueprint Wizard Folder","text":"<ul> <li>Purpose : Contains forms for handling wizards such as:</li> <li>Global Wizard</li> <li>School Wizard</li> <li>Country Wizard</li> <li>Modification Point : Changes to the form fields or logic can be applied here to adapt to new blueprint formats or client needs.</li> </ul>"},{"location":"code_structure/overview/#34-dashboard-folder","title":"3.4 Dashboard Folder","text":"<ul> <li>Purpose : Contains pages for normal users after they log in, including their personalized dashboard.</li> </ul>"},{"location":"code_structure/overview/#35-main-folder","title":"3.5 Main Folder","text":"<ul> <li>Purpose : Controls the main home page and navigation logic.</li> <li>Key Functionality : This folder dictates which views users will see based on their access level. By default, the global blueprint is loaded.</li> <li>Modification Point : The main folder could be restructured to allow for more flexible switching between wizards (school, country, global) without redirecting to different subdomains.</li> </ul>"},{"location":"code_structure/overview/#4-improvement-suggestions","title":"4. Improvement Suggestions","text":""},{"location":"code_structure/overview/#41-frontend-folder-structure","title":"4.1 Frontend Folder Structure","text":"<p>Currently, the frontend has separate wizards for schools, countries, and global blueprints. To enhance usability, this structure should be improved so that users can switch between school and country wizards without navigating to separate subdomains.</p> <p>Suggestion :</p> <ul> <li>Unify Wizards : Combine the school and country wizards into a single wizard interface that allows users to switch between them within the same platform. This will streamline the user experience and make it easier to navigate between different blueprint types.</li> </ul>"},{"location":"code_structure/overview/#42-backend-improvement","title":"4.2 Backend Improvement","text":"<p>The current backend uses the  PHP Slim Framework , which is lightweight but lacks some features for larger, more complex applications.</p> <p>Suggestion :</p> <ul> <li>Migrate to Laravel : Laravel provides more advanced features, such as built-in authentication, routing, and database management. Migrating to Laravel will improve scalability, security, and ease of development.</li> </ul>"},{"location":"contribution/guidelines/","title":"Guidelines","text":""},{"location":"contribution/guidelines/#how-to-contribute","title":"How to Contribute","text":"<p>We welcome contributions in several areas, including:</p> <ul> <li>Bug Reports : Help us identify and fix bugs.</li> <li>Feature Requests : Suggest new features or enhancements.</li> <li>Documentation : Improve the documentation for clarity and completeness.</li> <li>Code Contributions : Submit code changes for new features, bug fixes, or improvements.</li> </ul>"},{"location":"contribution/guidelines/#1-reporting-bugs","title":"1. Reporting Bugs","text":"<p>If you find a bug, please submit an issue on GitHub:</p> <ol> <li>Search Existing Issues : Before creating a new issue, please check if it has already been reported.</li> <li> <p>Open a New Issue : If the bug hasn't been reported, create a new issue. Provide as much detail as possible, including:</p> </li> <li> <p>Steps to reproduce the bug.</p> </li> <li>Expected behavior.</li> <li>Actual behavior.</li> <li>Screenshots or logs, if applicable.</li> </ol>"},{"location":"contribution/guidelines/#2-requesting-features","title":"2. Requesting Features","text":"<p>We\u2019re always looking for ways to improve our tools. If you have an idea for a new feature or an enhancement:</p> <ol> <li>Search Existing Issues : Check if a similar feature request has already been made.</li> <li> <p>Open a New Feature Request : If not, open a new issue and describe your feature request, including:</p> </li> <li> <p>A detailed explanation of the feature.</p> </li> <li>The problem it solves.</li> <li>Any potential impact on existing functionality.</li> </ol>"},{"location":"contribution/guidelines/#3-submitting-code-changes","title":"3. Submitting Code Changes","text":"<p>We welcome code contributions from the community. Follow these steps to submit your code:</p> <ol> <li>Fork the Repository : Create a fork of the repository to work on your changes.</li> <li>Create a New Branch : Create a new branch in your forked repository for your changes:</li> </ol> <pre>\n<code>\ngit checkout -b feature-branch-name\n</code>\n</pre> <pre>\n<code>\ngit checkout -b feature-branch-name\n</code>\n</pre> <ol> <li>Make Your Changes : Write your code, following the project's coding standards.</li> <li>Test Your Changes : Ensure that your changes do not break existing functionality by running all relevant tests.</li> <li>Commit Your Changes : Write a clear and descriptive commit message:</li> </ol> <pre>\n<code>\ngit commit -m \"Brief description of your changes\"\n</code>\n</pre> <ol> <li>Push to Your Fork : Push your changes to your forked repository:</li> </ol> <pre>\n<code>\ngit push origin feature-branch-name\n</code>\n</pre> <ol> <li>Open a Pull Request : Go to the original repository on GitHub and open a pull request. Provide a clear description of your changes and link to any relevant issues.</li> </ol>"},{"location":"contribution/guidelines/#4-code-review-process","title":"4. Code Review Process","text":"<ul> <li>After you open a pull request, it will be reviewed by the maintainers.</li> <li>You may be asked to make changes or provide additional information.</li> <li>Once your pull request is approved, it will be merged into the main branch.</li> </ul>"},{"location":"contribution/guidelines/#5-coding-standards","title":"5. Coding Standards","text":"<p>Please follow these coding standards when contributing:</p> <ul> <li>Consistency : Maintain consistency with the existing codebase.</li> <li>Comments : Comment your code where necessary to explain complex logic.</li> <li>Formatting : Use the project's formatting guidelines. For example, adhere to PEP 8 for Python code.</li> <li>Testing : Include tests for new features or significant changes.</li> </ul>"},{"location":"contribution/guidelines/#license","title":"License","text":"<p>By contributing to this project, you agree that your contributions will be licensed under the MIT License.</p>"},{"location":"contribution/guidelines/#communication","title":"Communication","text":"<p>If you have questions or need further clarification, feel free to reach out via GitHub issues or contact us directly at <code>fns@itu.int</code>.</p>"},{"location":"contribution/policies/","title":"Access Controls and Branching Policies for GitHub Repositories","text":"<p>Remember, the <code>modified</code> branch is the one to use for making edits. Administrators will merge changes from <code>modified</code> to <code>main</code>.</p>"},{"location":"contribution/policies/#repository-structure","title":"Repository Structure","text":""},{"location":"contribution/policies/#main-branch-main","title":"Main Branch (<code>main</code>)","text":"<ul> <li>Represents the production-ready code.</li> <li>Any changes to this branch will directly update the project in production. There is a pipeline already setup for this branch</li> <li>This should be a Protected branch with strict access controls to prevent unauthorized changes.</li> </ul>"},{"location":"contribution/policies/#modified-branch-modified","title":"Modified Branch (<code>modified</code>)","text":"<ul> <li>Serves as the primary development branch where active development occurs.</li> <li>All new features, bug fixes, and edits should be based on this branch.</li> <li>Acts as an integration point for feature branches before merging into <code>main</code>.</li> </ul>"},{"location":"contribution/policies/#branching-strategy","title":"Branching Strategy","text":"<p>To streamline development and maintain code integrity, we adopt a branching strategy inspired by Gitflow, simplified for our project's needs.</p>"},{"location":"contribution/policies/#feature-branches-featureyour-feature-name","title":"Feature Branches (<code>feature/your-feature-name</code>)","text":"<ul> <li>Created from the <code>modified</code> branch.</li> <li>Used for developing new features, enhancements, or bug fixes.</li> <li>Naming convention: <code>feature/brief-description</code> (e.g., <code>feature/user-authentication</code>).</li> </ul>"},{"location":"contribution/policies/#hotfix-branches-hotfixyour-hotfix-name","title":"Hotfix Branches (<code>hotfix/your-hotfix-name</code>)","text":"<ul> <li>Created from the <code>main</code> branch when critical fixes are needed in production.</li> <li>After completion, merged back into both <code>main</code> and <code>modified</code> branches.</li> </ul>"},{"location":"contribution/policies/#release-branches-optional","title":"Release Branches (Optional)","text":"<ul> <li>For preparing a new production release.</li> <li>Allows for final testing and minor bug fixes before merging into <code>main</code>.</li> </ul>"},{"location":"contribution/policies/#access-controls","title":"Access Controls","text":""},{"location":"contribution/policies/#roles-and-permissions","title":"Roles and Permissions","text":""},{"location":"contribution/policies/#ownersmaintainers","title":"Owners/Maintainers","text":"<ul> <li>Full access to the repository.</li> <li>Can merge pull requests, manage branches, and configure repository settings.</li> <li>Responsible for code reviews and approving changes to <code>main</code>.</li> </ul>"},{"location":"contribution/policies/#collaboratorscontributors","title":"Collaborators/Contributors","text":"<ul> <li>Can read and clone the repository.</li> <li>Allowed to create branches and submit pull requests.</li> <li>Cannot push directly to <code>main</code> or <code>modified</code> branches.</li> </ul>"},{"location":"contribution/policies/#protected-branches","title":"Protected Branches","text":""},{"location":"contribution/policies/#main-branch","title":"<code>main</code> Branch","text":"<ul> <li>Protected to prevent direct pushes.</li> <li>Requires pull requests for any changes.</li> <li>Enforces code review by at least one maintainer before merging.</li> <li>Continuous Integration (CI) checks must pass before merging.</li> </ul>"},{"location":"contribution/policies/#modified-branch","title":"<code>modified</code> Branch","text":"<ul> <li>Also protected to ensure stability.</li> <li>Direct pushes are restricted to maintainers.</li> <li>Pull requests from feature branches require at least one approval.</li> </ul>"},{"location":"contribution/policies/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>To contribute to the project, please follow these steps:</p> <ol> <li> <p>Fork the Repository:</p> </li> <li> <p>Click the \"Fork\" button to create your own copy of the repository.</p> </li> <li>Clone Your Fork:</li> </ol> <p><code>bash    git clone https://ITUINT@dev.azure.com/ITUINT/ConnectivityToolkit/_git/calculation-tools</code> 3. Set Upstream Remote (Optional but Recommended):</p> <p><code>bash    git remote add upstream https://ITUINT@dev.azure.com/ITUINT/ConnectivityToolkit/_git/calculation-tools</code> 4. Create a New Feature Branch:</p> <p><code>bash    git checkout -b feature/your-feature-name modified</code> 5. Make Changes and Commit:</p> <ul> <li>Follow the coding standards and guidelines.</li> <li>Write clear and concise commit messages.</li> </ul> <p><code>bash    git add .    git commit -m \"Brief description of your changes\"</code> 6. Push Changes to Your Fork:</p> <p><code>bash    git push origin feature/your-feature-name</code> 7. Submit a Pull Request:</p> <ul> <li>Navigate to the original repository on Azure DevOps.</li> <li>Click on \"New Pull Request\" and select your feature branch.</li> <li>Ensure the base branch is <code>modified</code>.</li> <li>Provide a detailed description of your changes.</li> <li> <p>Code Review and Approval:</p> </li> <li> <p>A maintainer will review your pull request.</p> </li> <li>Be responsive to feedback and make necessary changes.</li> <li>Once approved, the pull request will be merged into <code>modified</code>.</li> <li> <p>Merging to <code>main</code>:</p> </li> <li> <p>Periodically, <code>modified</code> will be merged into <code>main</code> after thorough testing.</p> </li> <li>Only maintainers can perform this action.</li> </ul>"},{"location":"contribution/policies/#coding-standards-and-guidelines","title":"Coding Standards and Guidelines","text":""},{"location":"contribution/policies/#code-quality","title":"Code Quality","text":"<ul> <li>Follow the established coding conventions.</li> <li>Write clean, readable, and well-documented code.</li> <li>Include comments where necessary.</li> </ul>"},{"location":"contribution/policies/#testing","title":"Testing","text":"<ul> <li>Write unit tests for new features and bug fixes.</li> <li>Ensure all existing tests pass before submitting a pull request.</li> <li>Verify that your code does not introduce new bugs.</li> </ul>"},{"location":"contribution/policies/#documentation","title":"Documentation","text":"<ul> <li>Update or create documentation relevant to your changes.</li> <li>Ensure installation guides and usage examples are up to date.</li> </ul>"},{"location":"contribution/policies/#continuous-integrationcontinuous-deployment-cicd","title":"Continuous Integration/Continuous Deployment (CI/CD)","text":""},{"location":"contribution/policies/#automated-checks","title":"Automated Checks","text":"<ul> <li>All pull requests will trigger automated tests.</li> <li>CI checks must pass before a pull request can be merged.</li> <li>Tests include code linting, unit tests, and build verification.</li> </ul>"},{"location":"contribution/policies/#deployment","title":"Deployment","text":"<ul> <li>Changes merged into <code>main</code> will automatically deploy to production.</li> <li>Ensure that all changes to <code>main</code> are stable and production-ready.</li> </ul>"},{"location":"contribution/policies/#issue-tracking-and-management","title":"Issue Tracking and Management","text":""},{"location":"contribution/policies/#reporting-issues","title":"Reporting Issues","text":"<ul> <li>Use the Issues tab to report bugs or request features.</li> <li>Provide a clear and detailed description.</li> </ul>"},{"location":"contribution/policies/#assigning-and-labeling","title":"Assigning and Labeling","text":"<ul> <li>Maintainers will triage issues and assign labels.</li> <li>Contributors can comment on issues they'd like to address.</li> </ul>"},{"location":"contribution/policies/#community-guidelines","title":"Community Guidelines","text":""},{"location":"contribution/policies/#code-of-conduct","title":"Code of Conduct","text":"<ul> <li>Be respectful and inclusive.</li> <li>Constructive feedback is encouraged.</li> <li>Harassment or discrimination will not be tolerated.</li> </ul>"},{"location":"contribution/policies/#communication","title":"Communication","text":"<ul> <li>Use clear and professional language.</li> <li>Keep discussions relevant to the project.</li> </ul>"},{"location":"contribution/policies/#security-practices","title":"Security Practices","text":""},{"location":"contribution/policies/#sensitive-information","title":"Sensitive Information","text":"<ul> <li>Do not commit secrets, passwords, or API keys to the repository.</li> <li>Use environment variables or secure vaults for sensitive data.</li> </ul>"},{"location":"contribution/policies/#vulnerability-reporting","title":"Vulnerability Reporting","text":"<ul> <li>If you discover a security vulnerability, report it privately to the maintainers.</li> <li>Do not create a public issue for security concerns.</li> </ul>"},{"location":"contribution/policies/#access-request-procedure","title":"Access Request Procedure","text":""},{"location":"contribution/policies/#becoming-a-collaborator","title":"Becoming a Collaborator","text":"<ul> <li>Regular contributors may be invited to become collaborators.</li> <li>Demonstrate consistent, quality contributions to be considered.</li> </ul>"},{"location":"contribution/policies/#maintainer-role","title":"Maintainer Role","text":"<ul> <li>Maintainers are appointed based on significant contributions and commitment.</li> <li>Responsible for guiding the project's direction.</li> </ul>"},{"location":"contribution/policies/#branch-deletion-policy","title":"Branch Deletion Policy","text":""},{"location":"contribution/policies/#feature-branches","title":"Feature Branches","text":"<ul> <li>After a feature branch has been merged, it should be deleted to keep the repository clean.</li> <li>This can be done by maintainers or the contributor who submitted the pull request.</li> </ul>"},{"location":"contribution/policies/#release-management","title":"Release Management","text":""},{"location":"contribution/policies/#versioning","title":"Versioning","text":"<ul> <li>Use semantic versioning for releases (e.g., <code>v1.2.3</code>).</li> <li>Tags should be created for each release.</li> </ul>"},{"location":"contribution/policies/#changelog","title":"Changelog","text":"<ul> <li>Maintain a changelog documenting new features, fixes, and breaking changes.</li> </ul>"},{"location":"contribution/policies/#backup-and-recovery","title":"Backup and Recovery","text":""},{"location":"contribution/policies/#repository-backup","title":"Repository Backup","text":"<ul> <li>Regular backups of the repository should be maintained.</li> <li>Use Azure DevOps' archival features or external backup solutions.</li> </ul>"},{"location":"contribution/policies/#disaster-recovery","title":"Disaster Recovery","text":"<ul> <li>In case of data loss, backups can be restored by maintainers.</li> </ul>"},{"location":"contribution/policies/#compliance-and-legal","title":"Compliance and Legal","text":""},{"location":"contribution/policies/#licensing","title":"Licensing","text":"<ul> <li>Clearly state the open-source license (e.g., MIT, Apache 2.0) in the repository.</li> <li>Ensure all contributions comply with the license terms.</li> </ul>"},{"location":"contribution/policies/#contributor-license-agreement-cla","title":"Contributor License Agreement (CLA)","text":"<ul> <li>Contributors may be required to sign a CLA.</li> <li>This ensures that contributions are licensed appropriately.</li> </ul>"},{"location":"contribution/policies/#additional-notes","title":"Additional Notes","text":""},{"location":"contribution/policies/#continuous-improvement","title":"Continuous Improvement","text":"<ul> <li>This policy is subject to change.</li> <li>Suggestions for improvements are welcome via pull requests or issues.</li> </ul>"},{"location":"contribution/policies/#acknowledgments","title":"Acknowledgments","text":"<ul> <li>Contributors will be acknowledged in the project's documentation.</li> </ul> <p>Repository Link: calculation-tools</p> <p>Remember, the <code>modified</code> branch is the one to use for making edits. Administrators will merge changes from <code>modified</code> to <code>main</code>.</p>"},{"location":"deployment/aws_pipeline/","title":"AWS Deployment & Pipeline","text":"<p>This section provides details on deploying the Calculation Tools to AWS using the pipeline configured in Azure DevOps.</p> <p>This setup assumes you have AWS Setup, AzureDevops Setup,  and a repository ( Github repository or azure repository)</p> <p>The pipeline runs successfully  from the main branch (View run tests here). This guide is to setup  from a modified branch</p> <p>Quick references and additional Video learning guides :</p> <p>Old calculation toolkit deployment via AWS CLI  Documentation ( Setup by original developer on how to deploy on aws- Reccomended )</p> <p>Connect Azure DevOps Pipeline to AWS Cloud  ( VIDEO DEMO GUIDE )</p> <p>Setting up a continous  development pipeline between github and AWS (VIDEO DEMO GUIDE )</p> <p>VS CODE Extension to assist with pipeline deployment to AWS (Reccomended  ) - Requires Admin rights</p>"},{"location":"deployment/aws_pipeline/#prerequisites","title":"Prerequisites.","text":"<p>Before starting, ensure you have the following:</p> <ol> <li>Azure DevOps Account: For setting up pipelines and service connections.</li> <li>AWS Account: With permissions to access ECR and IAM roles for authentication.</li> <li>Docker: Installed locally or in the build environment.</li> <li>AWS CLI: Installed and configured for AWS access.</li> </ol> <p>Guide to set this up: (https://ituint.sharepoint.com/:w:/r/sites/UIUXandFrontEnd/Shared%20Documents/General/Old%20Connectivity%20toolkit/Additionals/AWS%20SETUP.docx?d=wb2ec7e198d09499d9e574966665b2ad2&amp;csf=1&amp;web=1&amp;e=yhla19 ) </p>"},{"location":"deployment/aws_pipeline/#step-1-create-aws-iam-role-for-azure-devops","title":"Step 1: Create AWS IAM Role for Azure DevOps","text":"<ol> <li> <p>Create an IAM User in AWS:</p> </li> <li> <p>Go to the AWS Management Console and navigate to IAM.</p> </li> <li>Click Users and create a new user (e.g., <code>azure-devops-user</code>).</li> <li>Select Programmatic Access.</li> <li>Attach the following permissions:<ul> <li>AmazonS3FullAccess (or any other necessary permissions for your project).</li> </ul> </li> <li>Save the Access Key and Secret Access Key. You\u2019ll need these later.</li> <li> <p>Create a Role for Web Identity Federation:</p> </li> <li> <p>Navigate to IAM Roles in AWS and create a new role for Web Identity.</p> </li> <li>Attach the necessary permissions (e.g., AmazonS3FullAccess).</li> <li>Save the Role ARN for later.</li> </ol>"},{"location":"deployment/aws_pipeline/#step-2-set-up-azure-devops-pipeline","title":"Step 2: Set Up Azure DevOps Pipeline","text":"<ol> <li> <p>Create a Service Connection in Azure DevOps:</p> </li> <li> <p>Navigate to your project in Azure DevOps.</p> </li> <li>Go to Project Settings &gt; Service Connections.</li> <li>Click New Service Connection and choose AWS.</li> <li>Provide the AWS Access Key and Secret Access Key saved earlier.</li> <li>Name the service connection (e.g., <code>ADO-ConnectivityToolkit-AWS</code>).</li> <li> </li> </ol> <p>In the root directory of your repository, create the file <code>azure-pipelines.yml</code>.</p>"},{"location":"deployment/aws_pipeline/#create-the-azure-pipelinesyml-file-you-can-also-find-it-in-this-link-this-is-the-azure-pipeline-from-the-main-branch-but-you-can-copy-it-to-the-modified-branch","title":"Create the <code>azure-pipelines.yml</code> File: ( You can also find it in this link: This is the azure-pipeline from the main branch, but you can copy it to the modified branch  )","text":""},{"location":"deployment/aws_pipeline/#step-3-push-the-pipeline-to-githubazuredevops","title":"Step 3: Push the Pipeline to GitHub/Azuredevops","text":"<ul> <li>Add the <code>azure-pipelines.yml</code> file to the root of your project repository.</li> <li>Push the changes to your GitHub / Azure devops repository.</li> </ul>"},{"location":"deployment/aws_pipeline/#step-4-run-the-pipeline","title":"Step 4: Run the Pipeline :","text":"<p>Please note:</p> <p>The pipeline works on the main branch. The guide below is if you want to run from the modified branch</p> <ol> <li> <p>Trigger the Pipeline:</p> </li> <li> <p>Navigate to Pipelines in Azure DevOps and click Run Pipeline.</p> </li> <li>Ensure the pipeline runs on the latest <code>modified</code> branch and starts building and pushing Docker images to AWS ECR.</li> <li> <p>Monitor Progress:</p> </li> <li> <p>Watch the logs in Azure DevOps to ensure the pipeline completes successfully.</p> </li> <li>Confirm that the Docker images have been pushed to AWS ECR by checking the AWS Management Console under ECR.</li> </ol>"},{"location":"deployment/aws_pipeline/#step-5-verify-in-aws-ecr","title":"Step 5: Verify in AWS ECR","text":"<ol> <li>Login to AWS:</li> <li>Open the AWS Management Console and navigate to ECR.</li> <li>Ensure that the repository <code>connectivitytools</code> has the newly built Docker images tagged and available.</li> </ol>"},{"location":"deployment/aws_pipeline/#conclusion","title":"Conclusion","text":"<p>You have now successfully set up an Azure DevOps pipeline that builds Docker images and deploys them to AWS ECR. This automated pipeline ensures that any changes pushed to your GitHub repository are automatically built and deployed to your AWS infrastructure.</p>"},{"location":"deployment/azure_devops/","title":"Github + Azure DevOps Setup","text":"<p>This section details the Azure DevOps pipeline setup for the Calculation Tools. The setup works for both the old and modified versions of the project.</p> <p>This setup assumes you only want to setup a pipeline between a github or Azure repository and AzureDevops pipeline.</p> <p>Your project should be hosted on a github / azure repository for simplicity</p> <p>All the codes can be managed directly on your localhost and Push to GitHub , or directly edit from github and commiting the changes will automatically trigger Azure DevOps Pipelines to process the update</p> <p>Quick references and additional Video learning guides :</p> <p>GITHUB &amp; AZURE pipeline connection ( Video tutorial )</p> <p>AZURE pipeline VS CODE extension (Reccomended extension to have )</p>"},{"location":"deployment/azure_devops/#prerequisites","title":"Prerequisites.","text":"<p>Before starting, ensure you have:</p> <ol> <li>Azure DevOps Account: For setting up the pipeline and managing CI/CD.</li> <li>GitHub Repository: Where your project and configuration files are hosted.</li> <li>Docker: Installed locally or on the build machine. ( Optional )</li> </ol>"},{"location":"deployment/azure_devops/#step-1-access-your-azure-devops-repository","title":"Step 1: Access Your Azure DevOps Repository","text":"<ol> <li>Visit the Repository: Navigate to your repository on Azure DevOps:    Azure DevOps Repository: Calculation Tools.</li> <li> <p>Ensure Pipeline Files Are in the Root Directory:</p> </li> <li> <p>The <code>azure-pipelines.yml</code> and <code>docker-compose.yml</code> files should be in the root of the repository.</p> </li> <li>Ensure that your project structure is correctly aligned so Azure DevOps can detect the files for automated builds.</li> </ol>"},{"location":"deployment/azure_devops/#step-2-azure-devops-pipeline-setup","title":"Step 2: Azure DevOps Pipeline Setup","text":"<p>Ensure you have azure-pipeline.yml in your files. If not, check this file and copy the pipeline here</p> <ol> <li> <p>Go to Pipelines:</p> </li> <li> <p>On your Azure DevOps project dashboard, go to Pipelines &gt; New Pipeline.</p> </li> <li> <p>Select GitHub Repository:</p> </li> <li> <p>Choose GitHub as the source repository.</p> </li> <li>If you have already connected Azure DevOps to GitHub, select your repository (<code>calculation-tools</code>) from the list.</li> <li> <p>Detect <code>azure-pipelines.yml</code>:</p> </li> <li> <p>Azure DevOps will automatically detect the <code>azure-pipelines.yml</code> file in your repository root.</p> </li> <li>This file contains the necessary steps to build and push Docker images based on the configuration provided.</li> </ol>"},{"location":"deployment/azure_devops/#step-3-review-your-azure-pipelinesyml","title":"Step 3: Review Your <code>azure-pipelines.yml</code>","text":"<p>The <code>azure-pipelines.yml</code> file is already configured as you provided, and it will handle the automation of the following:</p> <ul> <li>Docker Image Building: Builds the Docker images using your <code>docker-compose.yml</code> file.</li> <li>Environment Setup: Sets up AWS environment variables required for authentication (assuming AWS is part of the environment).</li> </ul>"},{"location":"deployment/azure_devops/#step-4-review-your-docker-composeyml","title":"Step 4: Review Your <code>docker-compose.yml</code>","text":"<p>The <code>docker-compose.yml</code> file you shared is also structured to define the services in your Docker container environment.</p> <ul> <li>Services:</li> <li><code>mysql</code>: Runs a MySQL database service.</li> <li><code>nginx</code>: Runs an NGINX web server.</li> <li><code>api-frontend2</code> and <code>api-backend</code>: Configures the frontend and backend API services.</li> <li><code>rabbitmq</code>: Configures the RabbitMQ messaging service.</li> </ul>"},{"location":"deployment/azure_devops/#step-5-run-the-pipeline","title":"Step 5: Run the Pipeline","text":"<ol> <li> <p>Save and Run:</p> </li> <li> <p>After setting up the pipeline, Azure DevOps will automatically trigger the pipeline when changes are made to the repository (specifically the <code>main</code> branch).</p> </li> <li>You can manually run the pipeline by navigating to Pipelines in Azure DevOps and clicking Run Pipeline.</li> </ol> <p>A successful setup should look something like this ( Link ) 2. Monitor Progress:</p> <ul> <li>You can monitor the pipeline execution in real-time on the Azure DevOps dashboard.</li> <li>Logs will be available for each step, showing the build and deployment stages of your pipeline.</li> </ul>"},{"location":"deployment/azure_devops/#screenshots","title":"Screenshots","text":"<p>https://prnt.sc/wQfH3T1BgwKl </p> <p>https://prnt.sc/5Bk6X7kMIxnZ</p> <p>https://prnt.sc/iQi9vtyQQKl1</p> <p>https://prnt.sc/M5CuRUMx7tzP</p>"},{"location":"deployment/azure_devops/#conclusion","title":"Conclusion","text":"<p>By following these steps, you\u2019ve now successfully connected your GitHub repository to Azure DevOps and set up a CI/CD pipeline using your <code>azure-pipelines.yml</code> and <code>docker-compose.yml</code> files. Depending on the setup, Each time you push new changes to the <code>modified</code> branch, the pipeline will automatically build and deploy your services using Docker.</p>"},{"location":"deployment/general/","title":"General Instructions","text":"<p>This section provides instructions on how to set up and manage the CI/CD pipeline for the Calculation Tools project. The setup ensures that your code is automatically built, tested, and deployed using Azure DevOps and AWS.</p>"},{"location":"deployment/general/#general-instructions","title":"General Instructions","text":""},{"location":"deployment/general/#overview","title":"Overview","text":"<p>The CI/CD pipeline is designed to automate the process of building, testing, and deploying the Calculation Tools. This process ensures that every change to the codebase is automatically validated and deployed, reducing manual intervention and increasing reliability.</p>"},{"location":"deployment/general/#prerequisites","title":"Prerequisites","text":"<p>Ensure the following before setting up the pipeline:</p> <ul> <li>Access to the Azure DevOps organization where the pipeline will be configured.</li> <li>Access to an AWS account with permissions to manage AWS resources such as ECR (Elastic Container Registry).</li> <li>Docker installed and configured on the CI/CD agent or locally for testing.</li> </ul>"},{"location":"deployment/general/#cicd-workflow","title":"CI/CD Workflow","text":"<ol> <li>Code Changes : Developers push code changes to the <code>main</code> branch in the Git repository.</li> <li>Trigger Pipeline : The Azure DevOps pipeline is triggered automatically by the <code>main</code> branch.</li> <li>Build and Test : The pipeline builds the Docker images and runs any configured tests.</li> <li>Deploy : After successful builds and tests, the Docker images are pushed to AWS ECR, and the application is deployed.</li> </ol>"},{"location":"improvements/report/","title":"Detailed Report on Proposed Improvements","text":"<p>thaThis section outlines recommendations for improving the Calculation Tools project, focusing on updating the tech stack and enhancing overall performance and maintainability.</p>"},{"location":"improvements/report/#1-frontend-suggestions-and-improvements","title":"1. Frontend Suggestions and Improvements","text":"<p>The current frontend is built using  Angular v1 , which is outdated. Here are the suggestions:</p>"},{"location":"improvements/report/#11-upgrade-to-a-modern-angular-version","title":"1.1 Upgrade to a Modern Angular Version","text":"<ul> <li>Reason : Angular v1 (also known as AngularJS) is no longer actively supported, and newer versions of Angular offer better performance, security, and maintainability.</li> <li>Upgrade Path :</li> <li>Incrementally upgrade to  Angular 12+ . This would involve migrating the codebase step-by-step since there are significant differences between AngularJS and modern Angular.</li> <li>Use the ngUpgrade library to facilitate migration from AngularJS to Angular.</li> <li>The new Angular CLI allows for easy scaffolding, building, and maintaining projects.</li> </ul>"},{"location":"improvements/report/#12-use-a-modern-ui-framework","title":"1.2 Use a Modern UI Framework","text":"<ul> <li>Reason : The current UI components may lack responsiveness and modern design patterns.</li> <li>Suggestion : Integrate Angular Material or Bootstrap 5 to improve the UI and make it more responsive and mobile-friendly.</li> </ul>"},{"location":"improvements/report/#13-improved-state-management","title":"1.3 Improved State Management","text":"<ul> <li>Reason : Angular v1 uses <code>$scope</code>, which is prone to memory leaks and is less efficient in managing data flow.</li> <li>Suggestion : In modern Angular, use RxJS and NgRx for more predictable and efficient state management.</li> </ul>"},{"location":"improvements/report/#14-optimize-performance","title":"1.4 Optimize Performance","text":"<ul> <li>Lazy Loading : Split the application into smaller modules and use lazy loading to load components only when required.</li> <li>AOT (Ahead-of-Time) Compilation : Use Angular\u2019s AOT feature to compile templates at build time, which will improve runtime performance.</li> </ul>"},{"location":"improvements/report/#15-one-dashboard-to-access-all-modes","title":"1.5 One dashboard to access all modes","text":"<ul> <li>The current structure is that one user should create an account for School, country and global . This process is tedious. The recommended approach is to have one account as a user, where you can access the different app modes . So s a user, once i register and login , i can use one account, to run school, country and global modes.</li> </ul>"},{"location":"improvements/report/#2-backend-suggestions-and-improvements","title":"2. Backend Suggestions and Improvements","text":"<p>The current backend is built with the  Slim Framework . Here are some suggestions for improving it:</p>"},{"location":"improvements/report/#21-migrate-to-laravel","title":"2.1 Migrate to Laravel","text":"<ul> <li>Reason : Laravel is a robust PHP framework that provides a full-featured environment for modern web applications. It's more secure, scalable, and developer-friendly compared to Slim.</li> <li>Benefits of Laravel :</li> <li>Eloquent ORM : Powerful, intuitive ActiveRecord implementation for working with databases.</li> <li>Artisan CLI : Useful for automating repetitive tasks.</li> <li>Built-in Authentication and Authorization : Easier user management and security.</li> <li>Blade Templating Engine : Simplifies frontend rendering on the backend.</li> <li>Strong Community Support : Laravel has an active and vibrant community, providing extensive support and documentation.</li> <li>Migration Path :</li> <li>Set up a new Laravel project and start migrating existing Slim-based routes and logic.</li> <li>Use Laravel\u2019s migration tools to move databases and schemas.</li> <li>Slowly transition from Slim to Laravel by setting up backward compatibility for API requests.</li> </ul>"},{"location":"improvements/report/#22-implement-unit-testing","title":"2.2 Implement Unit Testing","text":"<ul> <li>Reason : Testing improves code quality and helps prevent bugs in production.</li> <li>Suggestion : Implement PHPUnit for testing your backend API endpoints, services, and models.</li> </ul>"},{"location":"improvements/report/#23-improve-security","title":"2.3 Improve Security","text":"<ul> <li>Reason : Security is paramount for any modern web application.</li> <li>Suggestions :</li> <li>Implement JWT (JSON Web Tokens) or OAuth2 for secure API authentication.</li> <li>Use Laravel\u2019s built-in security features like CSRF protection, SQL injection prevention, and more.</li> <li>Regularly update PHP dependencies to patch known security vulnerabilities.</li> </ul>"},{"location":"maintenance/plan/","title":"Maintenance Plan","text":"<p>This guide provides detailed instructions on how to maintain the Calculation Tools project, ensuring it runs smoothly and efficiently over time. This includes managing dependencies, monitoring Docker images, securing the application, and handling backups and recovery.</p>"},{"location":"maintenance/plan/#1-node-package-management","title":"1. Node Package Management","text":""},{"location":"maintenance/plan/#11-overview","title":"1.1 Overview","text":"<p>The Calculation Tools project is highly dependent on Node packages. Regularly updating and managing these packages is crucial to the system's stability and security.</p>"},{"location":"maintenance/plan/#12-package-management-setup","title":"1.2 Package Management Setup","text":"<p>To efficiently manage and update Node packages, we recommend using the Package JSON Upgrade extension in Visual Studio Code. This tool simplifies the process of checking for outdated packages and upgrading them.</p>"},{"location":"maintenance/plan/#setup-instructions","title":"Setup Instructions :","text":"<ol> <li> <p>Install the Extension :</p> </li> <li> <p>Visit the Visual Studio Marketplace: Package JSON Upgrade.</p> </li> <li> <p>Click on \"Install\" to add the extension to your Visual Studio Code.</p> </li> <li> <p>Using the Extension :</p> </li> <li> <p>Open your <code>package.json</code> file in Visual Studio Code.</p> </li> <li>Use the command <code>Toggle showing package updates</code> to check for available package updates.</li> <li>Follow the prompts to upgrade any outdated packages.</li> </ol>"},{"location":"maintenance/plan/#13-regular-maintenance","title":"1.3 Regular Maintenance","text":"<ul> <li>Check for Updates : Regularly check for package updates to ensure the system remains secure and up-to-date.</li> <li>Audit for Vulnerabilities : Run <code>npm audit</code> periodically to identify and fix vulnerabilities in your dependencies.</li> </ul>"},{"location":"maintenance/plan/#2-docker-image-management","title":"2. Docker Image Management","text":""},{"location":"maintenance/plan/#21-overview","title":"2.1 Overview","text":"<p>The Calculation Tools project uses several Docker images to encapsulate its various components. Maintaining these images is critical to the project's performance and reliability.</p>"},{"location":"maintenance/plan/#22-specific-docker-images","title":"2.2 Specific Docker Images","text":"<p>Below are the Docker images used in this project, along with their identifiers and sizes:</p> <ul> <li>NGINX Image :</li> <li>Name : <code>calculation-tools_1-nginx</code></li> <li>ID : <code>55198efa673e</code></li> <li>Size : 64.06 MB</li> <li>Frontend API Image :</li> <li>Name : <code>calculation-tools_1-api-frontend2</code></li> <li>ID : <code>9fd156796614</code></li> <li>Size : 487.33 MB</li> <li>Backend API Image :</li> <li>Name : <code>calculation-tools_1-api-backend</code></li> <li>ID : <code>3f6f4b9bf84b</code></li> <li>Size : 2.1 GB</li> <li>RabbitMQ Image :</li> <li>Name : <code>rabbitmq:3-management</code></li> <li>ID : <code>b188af0de93c</code></li> <li>Size : 250.59 MB</li> <li>MySQL Image :</li> <li>Name : <code>mysql:5.7.42</code></li> <li>ID : <code>d7b085374dbc</code></li> <li>Size : 581.07 MB</li> </ul>"},{"location":"maintenance/plan/#23-regular-maintenance","title":"2.3 Regular Maintenance","text":"<ul> <li>Image Updates : Regularly check for and apply updates to these images to ensure they are running the latest versions with security patches.</li> <li>Image Size Management : Monitor the sizes of your Docker images and clean up any unnecessary layers or intermediate images to conserve disk space.</li> <li>Container Health Checks : Implement health checks for Docker containers to automatically restart them in case of failures.</li> </ul>"},{"location":"maintenance/plan/#3-monitoring-and-logging","title":"3. Monitoring and Logging","text":""},{"location":"maintenance/plan/#31-overview","title":"3.1 Overview","text":"<p>Monitoring and logging are essential for tracking the performance and health of your Docker containers and the overall application.</p>"},{"location":"maintenance/plan/#32-tools-and-setup","title":"3.2 Tools and Setup","text":"<ul> <li>Monitoring : Use tools like Prometheus, Grafana, or cloud-native services (e.g., AWS CloudWatch, Azure Monitor) to monitor container metrics such as CPU usage, memory consumption, and network traffic.</li> <li>Logging : Set up centralized logging using tools like ELK Stack (Elasticsearch, Logstash, Kibana) or cloud-native logging services. Ensure that all Docker containers send logs to a centralized location for easy access and analysis.</li> </ul>"},{"location":"maintenance/plan/#33-regular-maintenance","title":"3.3 Regular Maintenance","text":"<ul> <li>Log Rotation : Implement log rotation policies to prevent log files from consuming too much disk space.</li> <li>Alerting : Set up alerts for critical metrics (e.g., high CPU usage, low memory) to proactively address issues.</li> </ul>"},{"location":"maintenance/plan/#4-backup-and-recovery","title":"4. Backup and Recovery","text":""},{"location":"maintenance/plan/#41-regular-backups","title":"4.1 Regular Backups","text":"<ul> <li>Data Backups : Regularly back up all persistent data stored in databases like MySQL. Use tools like <code>mysqldump</code> or cloud-native backup services.</li> <li>Configuration Backups : Back up configuration files, environment variables, and Docker Compose files to ensure they can be restored if needed.</li> </ul>"},{"location":"maintenance/plan/#42-recovery-procedures","title":"4.2 Recovery Procedures","text":"<ul> <li>Database Recovery : Document and test the process of restoring database backups to minimize downtime in case of data loss.</li> <li>Container Recovery : Have procedures in place to quickly rebuild and redeploy Docker containers in case of failures.</li> </ul>"},{"location":"maintenance/plan/#5-security-maintenance","title":"5. Security Maintenance","text":""},{"location":"maintenance/plan/#51-regular-updates","title":"5.1 Regular Updates","text":"<ul> <li>Package Updates : Regularly update Node packages, Docker images, and system packages to ensure the latest security patches are applied.</li> <li>Secrets Management : Use secure methods to manage secrets (e.g., passwords, API keys) like AWS Secrets Manager, Azure Key Vault, or environment variables managed securely in Docker Compose files.</li> </ul>"},{"location":"maintenance/plan/#52-access-controls","title":"5.2 Access Controls","text":"<ul> <li>Least Privilege : Ensure that Docker containers and cloud resources operate with the least privileges necessary.</li> <li>Firewall and Network Security : Regularly review and update firewall rules, security groups, and network ACLs to restrict access to only trusted IP addresses.</li> </ul>"},{"location":"maintenance/plan/#6-performance-optimization","title":"6. Performance Optimization","text":""},{"location":"maintenance/plan/#61-container-resource-management","title":"6.1 Container Resource Management","text":"<ul> <li>Resource Allocation : Adjust CPU and memory allocations for Docker containers to optimize performance.</li> <li>Scaling : Use Docker Swarm, Kubernetes, or cloud-native scaling solutions to scale containers based on demand.</li> </ul>"},{"location":"maintenance/plan/#62-regular-audits","title":"6.2 Regular Audits","text":"<ul> <li>Performance Audits : Conduct regular performance audits to identify and resolve bottlenecks.</li> <li>Load Testing : Perform load testing periodically to ensure the application can handle increased traffic.</li> </ul>"},{"location":"maintenance/plan/#7-troubleshooting","title":"7. Troubleshooting","text":""},{"location":"maintenance/plan/#71-common-issues","title":"7.1 Common Issues","text":"<ul> <li>Container Failures : Document common container failures and their resolutions (e.g., out-of-memory errors, network connectivity issues).</li> <li>Dependency Conflicts : Keep a log of any dependency conflicts that arise and how they were resolved.</li> </ul>"},{"location":"maintenance/plan/#72-support-and-resources","title":"7.2 Support and Resources","text":"<ul> <li>Documentation : Regularly update project documentation to reflect any changes in dependencies, Docker images, or cloud configurations.</li> <li>Community Support : Engage with the community and cloud provider support channels to address complex issues.</li> </ul>"},{"location":"maintenance/translating_guide/","title":"How to Translate","text":"<p>To add or remove languages in the system, you need to update two key files:</p>"},{"location":"maintenance/translating_guide/#file-1-language-picker","title":"File 1: Language Picker","text":"<p>Path: <code>Client &gt; Components &gt; Language-picker &gt; Language-picker.html</code></p> <p>This file controls the language dropdown available to users or admins for selection.</p>"},{"location":"maintenance/translating_guide/#instructions","title":"Instructions:","text":"<ul> <li>Add or remove language abbreviations in this file to update the dropdown list.</li> <li>Edit lines 4 and 13 to include new languages in the dropdown.</li> </ul>"},{"location":"maintenance/translating_guide/#example","title":"Example:","text":"<pre><code>&lt;span ng-if=\"type === 'navbar'\"\n    ng-repeat=\"lang in ['ru', 'en', 'es']\"\n    ng-show=\"currentLanguage !== lang\"&gt;\n    &lt;a href=\"\" ng-click=\"switchLanguage(lang)\"&gt;{{'languages.'+lang | translate}}&lt;/a&gt;\n&lt;/span&gt;\n\n&lt;div ng-if=\"type === 'settings'\" class=\"btn-group\"&gt;\n    &lt;button class=\"btn btn-default\"\n        ng-repeat=\"lang in ['ru', 'en', 'es']\"\n        ng-if=\"currentLanguage !== lang\" \n        ng-click=\"switchLanguage(lang)\"&gt;\n        {{'languages.'+lang | translate}}\n    &lt;/button&gt;\n&lt;/div&gt;\n</code></pre> <ul> <li>In the example above, <code>'ru'</code>, <code>'en'</code>, and <code>'es'</code> represent Russian, English, and Spanish, respectively. To add a new language, such as French (<code>'fr'</code>), add it to the list: <code>['ru', 'en', 'es', 'fr']</code>.</li> </ul>"},{"location":"maintenance/translating_guide/#file-2-translation-files","title":"File 2: Translation Files","text":"<p>Path: <code>Assets &gt; i18n</code></p> <p>This folder contains the language variables used for translations. Each language has its own folder with corresponding translation files.</p>"},{"location":"maintenance/translating_guide/#instructions_1","title":"Instructions:","text":"<ul> <li>To add a language, duplicate the <code>en</code> (English) folder, rename it to the desired language code (e.g., <code>fr</code> for French), and translate all strings inside each file.</li> <li>To remove a language, delete the folder for that specific language.</li> </ul>"},{"location":"maintenance/translating_guide/#example_1","title":"Example:","text":"<ul> <li>Open <code>account.json</code> in the <code>es</code> (Spanish) folder and compare it with the <code>en</code> folder to see how translations are structured.</li> <li>Translate each string in every file within the new language folder.</li> </ul>"},{"location":"maintenance/translating_guide/#notes","title":"Notes:","text":"<ul> <li>Ensure consistency in the naming of language codes throughout the application.</li> <li>Double-check all translations to maintain accuracy and clarity.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/","title":"Calculation Tools Troubleshooting Guide","text":"<p>This guide provides steps for troubleshooting both the frontend and backend of the Calculation Tools project.</p>"},{"location":"maintenance/troubleshooting_guide/#frontend-troubleshooting-client-folder","title":"Frontend Troubleshooting (Client Folder)","text":"<p>The frontend is based on Angular v1. Follow these steps to troubleshoot common issues:</p>"},{"location":"maintenance/troubleshooting_guide/#1-check-nodejs-and-npm-versions","title":"1. Check Node.js and NPM Versions","text":"<ul> <li>Ensure you are using the correct Node.js and npm versions required for Angular v1.</li> <li>You can check the versions by running:</li> </ul> <pre><code>node -v\nnpm -v\n</code></pre> <ul> <li>Ensure you're using Node.js v10.x.x (on old version) or v20.x.x (on modified version), which are compatible with Angular v1.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#2-reinstall-node-modules","title":"2. Reinstall Node Modules","text":"<ul> <li>Sometimes, dependency issues may arise. Try removing and reinstalling the <code>node_modules</code> folder:</li> </ul> <pre><code>rm -rf node_modules\nnpm install\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#3-check-for-console-errors","title":"3. Check for Console Errors","text":"<ul> <li>Open your browser's Developer Tools (usually by pressing F12) and look for errors in the Console tab. These will give clues about missing dependencies or syntax errors.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#4-run-in-development-mode","title":"4. Run in Development Mode","text":"<ul> <li>Use <code>gulp serve</code> to run the project in development mode and identify any errors during the build process:</li> </ul> <pre><code>gulp serve\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#5-troubleshoot-gulp-issues","title":"5. Troubleshoot Gulp Issues","text":"<ul> <li>If there are issues with Gulp tasks, ensure you have the correct versions installed globally:</li> </ul> <pre><code>npm install --global gulp-cli\ngulp --version\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#6-dependency-conflicts","title":"6. Dependency Conflicts","text":"<ul> <li>If there are package conflicts, try resolving them by running:</li> </ul> <pre><code>npm audit fix\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#7-cross-origin-resource-sharing-cors","title":"7. Cross-Origin Resource Sharing (CORS)","text":"<ul> <li>If you're encountering CORS errors (especially during API calls), ensure that the backend server is configured to allow requests from the frontend domain.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#backend-troubleshooting-server-directory","title":"Backend Troubleshooting (Server Directory)","text":"<p>The backend is based on the PHP Slim Framework. Follow these steps to troubleshoot the backend:</p>"},{"location":"maintenance/troubleshooting_guide/#1-check-php-version","title":"1. Check PHP Version","text":"<ul> <li>Ensure that the correct PHP version is installed. PHP Slim v3 is compatible with PHP 7.4.x. You can check the version by running:</li> </ul> <pre><code>php -v\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#2-verify-dependencies","title":"2. Verify Dependencies","text":"<ul> <li>Ensure all required PHP dependencies are installed using Composer:</li> </ul> <pre><code>composer install\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#3-check-apachenginx-configuration","title":"3. Check Apache/Nginx Configuration","text":"<ul> <li>Ensure that your Apache or Nginx server is correctly configured to route requests to the Slim framework. The <code>public</code> folder should be the root directory.</li> <li>Check your virtual host configuration for proper routing.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#4-check-logs","title":"4. Check Logs","text":"<ul> <li>PHP errors will often be logged in the error_log file on your server. Check this file for any issues with routing, database connections, or PHP errors.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#5-test-api-endpoints","title":"5. Test API Endpoints","text":"<ul> <li>Use tools like Postman or cURL to manually test the API endpoints. Make sure the expected responses are being returned, and check for any errors.</li> <li>Example using cURL:</li> </ul> <pre><code>curl -X GET http://localhost/api/endpoint\n</code></pre>"},{"location":"maintenance/troubleshooting_guide/#6-database-connection","title":"6. Database Connection","text":"<ul> <li>Ensure the backend is correctly connecting to your database. Check the (.env) or (server/app/settings.php) file for the correct credentials (host, username, password, database).</li> <li>Use MySQL CLI or phpMyAdmin to verify database connectivity.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#7-cache-issues","title":"7. Cache Issues","text":"<ul> <li>If the backend seems unresponsive or stale, try clearing the PHP and server-side cache.</li> </ul>"},{"location":"maintenance/troubleshooting_guide/#8-check-cors-configuration","title":"8. Check CORS Configuration","text":"<ul> <li>Make sure that CORS is properly configured on the backend to allow API requests from the frontend application.</li> </ul>"},{"location":"modified_version/prerequisites/","title":"Modified Calculation Tools Prerequisites","text":"<p>The modified version of the Calculation Tools introduces updated frameworks and tools to ensure better performance, security, and compatibility. Please make sure your environment is configured with the following software and tools:</p> <p>Works for Windows, mac, and Linux</p>"},{"location":"modified_version/prerequisites/#nodejs-setup","title":"Node.js Setup","text":""},{"location":"modified_version/prerequisites/#nodejs-version-20x-or-higher","title":"Node.js Version: 20.x or Higher","text":"<p>For this project, Node.js version 20 or higher is required. The latest LTS version is recommended.</p>"},{"location":"modified_version/prerequisites/#steps","title":"Steps:","text":"<ol> <li>Install NVM (Node Version Manager)</li> <li> <p>Download and follow the guide from the NVM GitHub page.</p> </li> <li> <p>Install Node.js version 20 using NVM</p> </li> <li> <p>Use NVM to install Node.js version 20.x:      <code>nvm install 20</code></p> </li> <li> <p>Verify Installed Node.js Versions</p> </li> <li> <p>List all installed Node.js versions:      <code>nvm list</code></p> </li> <li> <p>Switch to Node.js Version 20</p> </li> <li> <p>Set Node.js version 20.x as the active version:      <code>nvm use 20</code></p> </li> <li> <p>Confirm Active Node.js Version</p> </li> <li>Verify that Node.js version 20.x is active:      <code>node -v</code></li> <li> <p>Ensure the output shows <code>v20.x.x</code>.</p> </li> <li> <p>Install Gulp</p> </li> <li>Gulp is required for task automation. Install it using:      ```      npm install --global gulp-cli@2.3.0      npm install gulp@4.0.2 --save-dev</li> </ol>"},{"location":"modified_version/prerequisites/#2-python","title":"2. Python","text":""},{"location":"modified_version/prerequisites/#python-version-3x-or-higher","title":"Python Version: 3.x or Higher","text":"<p>The modified version requires Python 3.x for better performance and support of modern libraries.</p> <ol> <li> <p>Install Python 3.x :</p> </li> <li> <p>Download and install the latest version of Python 3.x from the Python official website.</p> </li> <li>On macOS/Linux, use your package manager:</li> </ol> <p><code>sudo apt-get install python3</code> 2. Verify the installation:</p> <ul> <li>Confirm the installation:</li> </ul> <p><code>python3 --version</code></p> <ul> <li>Ensure the output shows <code>Python 3.x.x</code>.</li> </ul>"},{"location":"modified_version/prerequisites/#3-php","title":"3. PHP","text":""},{"location":"modified_version/prerequisites/#php-version-supports-74","title":"PHP Version: (Supports 7.4 +)","text":"<p>For optimal performance and compatibility, PHP version 7.4+ is recommended.</p> <ol> <li> <p>Install PHP 7.4 :</p> </li> <li> <p>Download and install PHP 7.4 from the official PHP website.</p> </li> <li>Alternatively, use a package manager: (RECOMMENDED APPROACH)<ul> <li>XAMPP (Windows, macOS, Linux) or stack that includes PHP 7.4 or above.</li> <li>XAMPP FOR WINDOWS DOWNLOAD LINK</li> <li>XAMPP FOR LINUX DOWNLOAD LINK</li> <li>XAMPP FOR MacOS DOWNLOAD LINK</li> </ul> </li> </ol> <p>##### THATS IT :) </p> <p>If you download xampp from the links shared above and install it , you get the following setup</p> <p>php 7.4 , Apache, mysql </p> <p>This setup allows you to run php and also upload the database. </p>"},{"location":"modified_version/prerequisites/#additional-tools-if-you-had-php-already-installed-n-your-platform","title":"Additional Tools ( If you had php already installed n your platform )","text":"<ol> <li> <p>Using PHP Version Switcher (Windows only):  </p> </li> <li> <p>Open PowerShell and install Scoop:</p> </li> </ol> <p><code>irm get.scoop.sh | iex    # You can use proxies if you have network trouble accessing GitHub, e.g.    irm get.scoop.sh -Proxy 'http://&lt;ip:port&gt;' | iex</code>    * Confirm if Scoop is installed:</p> <p><code>scoop --version</code>    * Install PHP 7.4 using Scoop:</p> <p><code>scoop bucket add versions    scoop install versions/php74</code>    * To switch between PHP versions:</p> <p><code>scoop list    scoop switch php74</code> 5. Verify PHP Installation :</p> <ul> <li>Confirm the PHP version:</li> </ul> <p><code>php -v</code>    * Ensure the output shows PHP 7.4+.</p>"},{"location":"modified_version/setup/","title":"Calculation Tools Setup Guide","text":"<p>This guide will walk you through setting up the frontend, backend, and database for the Calculation Tools project. Follow the steps in sequence for a smooth installation. </p> <p>This setup assumes you have Php 7.4 +, python 3+ and node20+  installed successfully from the previous prerequisites step</p>"},{"location":"modified_version/setup/#project-stack-on-modified-version","title":"Project stack on modified version:","text":"<ul> <li>Frontend : Based on Angular (old version).</li> <li>Backend : PHP (using Slim Framework).</li> <li>Database : MySQL (via XAMPP).</li> </ul> <p>To setup the following tools needed for this project  , use this Setup guide</p> <p>To understand how xampp works , have a look at this guide Xampp guide</p> <p>VIDEOS</p> <p>Use this video link to view how to set up the project: Modified toolkit installation &amp; setup video</p> <p>Use this video to understand how Xampp server works for local setups  Xampp guide and setup video</p>"},{"location":"modified_version/setup/#downloading-the-project","title":"Downloading the project :","text":"<p>You can clone the modified branch by going to this link : https://ITUINT@dev.azure.com/ITUINT/ConnectivityToolkit/_git/calculation-tools  But its much easier for you if you just download the zip version . Downloading saves you time and less setup </p> <p></p> <p>After downloading, you can proceed with the steps below </p>"},{"location":"modified_version/setup/#step-1-frontend-setup","title":"Step 1: Frontend Setup","text":""},{"location":"modified_version/setup/#11-install-nodejs-and-npm","title":"1.1 Install Node.js and NPM","text":"<ul> <li>Ensure you have Node.js and npm installed. You can download the latest version from Node.js Official Website.</li> <li>Verify the installation by running the following commands:</li> </ul> <p>node -v</p> <p>npm -v</p>"},{"location":"modified_version/setup/#12-install-gulp-globally-and-locally","title":"1.2 Install Gulp Globally and Locally","text":"<ul> <li>Install the Gulp CLI globally to ensure you can run the <code>gulp</code> commands across your system:</li> </ul> <p><code>npm install --global gulp-cli@2.3.0</code> * Install Gulp locally in your project directory:</p> <p><code>npm install gulp@4.0.2 --save-dev</code> * Verify Gulp installation :</p> <p><code>gulp --version</code></p> <p>The output should show:</p> <ul> <li>CLI version : 2.3.0</li> <li>Local version : 4.0.2</li> </ul>"},{"location":"modified_version/setup/#13-install-frontend-dependencies","title":"1.3 Install Frontend Dependencies","text":"<ul> <li>Navigate to the project root (where <code>package.json</code> is located), and install the necessary Node and Bower packages:</li> </ul> <p>npm install</p> <p>bower install</p> <p>If you encounter issues with dependencies, you may need to clear the <code>node_modules</code> folder and reinstall:</p> <p>rm -rf node_modules</p> <p>npm install</p>"},{"location":"modified_version/setup/#14-serve-the-frontend","title":"1.4 Serve the Frontend","text":"<ul> <li>Use Gulp to serve the application:</li> </ul> <p><code>gulp serve</code> * The frontend will be served on <code>http://localhost:8000</code></p>"},{"location":"modified_version/setup/#step-2-backend-setup","title":"Step 2: Backend Setup","text":""},{"location":"modified_version/setup/#21-install-composer","title":"2.1 Install Composer","text":"<ul> <li>Make sure Composer is installed for managing PHP dependencies. If not, download and install it from Composer's Official Website.</li> <li>If you run into compatibility issues with PHP versions, use the <code>ignore-platform-reqs</code> flag:</li> </ul> <p><code>composer install --ignore-platform-reqs</code></p>"},{"location":"modified_version/setup/#22-install-backend-dependencies","title":"2.2 Install Backend Dependencies","text":"<ul> <li>Navigate to the <code>server</code> directory (where the backend code resides) and install the required PHP dependencies using Composer:</li> </ul> <p><code>cd server</code></p> <p><code>php composer.phar install --ignore-platform-reqs</code></p>"},{"location":"modified_version/setup/#23-check-backend-configuration","title":"2.3 Check Backend Configuration","text":"<ul> <li>Verify the database configuration in the <code>app/settings.php</code> file and ensure the correct database credentials are entered. Use the following configuration for XAMPP:</li> </ul> <p><code>php   'db' =&gt; [       'host' =&gt; '127.0.0.1',       'port' =&gt; '3306', // XAMPP default MySQL port       'dbname' =&gt; 'giga',       'user' =&gt; 'root',       'pass' =&gt; '' // No password for XAMPP's default MySQL setup   ],</code></p>"},{"location":"modified_version/setup/#24-start-the-backend-server","title":"2.4 Start the Backend Server","text":"<ul> <li>To start the backend server, run the following command from the <code>server</code> directory:</li> </ul> <p><code>php composer.phar start</code> * The backend will be available at <code>http://localhost:8080</code>.</p>"},{"location":"modified_version/setup/#step-3-database-setup-this-assumes-you-are-using-xampp-and-you-are-running-apache-and-mysql","title":"**Step 3: Database Setup ** This assumes you are using XAMPP, and you are running Apache and mysql","text":"<p>Ensure that you have xampp installed. To run it, double click on the xampp icon to open xampp control panel, then start apache and mysql   Use this guide for more help with XAMPP </p>"},{"location":"modified_version/setup/#31-access-phpmyadmin","title":"3.1 Access phpMyAdmin","text":"<ul> <li>Go to your browser and type <code>http://localhost/phpmyadmin</code> to access the MySQL administration interface.</li> </ul>"},{"location":"modified_version/setup/#32-create-the-database","title":"3.2 Create the Database","text":"<ul> <li>In phpMyAdmin, click on the Databases tab.</li> <li>Create a new database with the following details:</li> <li>Database name : <code>giga</code></li> <li>Username : <code>root</code></li> <li>Password : Leave it blank (default for XAMPP).</li> </ul>"},{"location":"modified_version/setup/#33-upload-the-database","title":"3.3 Upload the Database","text":"<ul> <li>Download the SQL file from the following link: Download giga.sql.</li> <li>In phpMyAdmin, select the <code>giga</code> database and click on the Import tab.</li> <li>Choose the <code>giga.sql</code> file you downloaded and click Go to upload the database schema.</li> </ul>"},{"location":"modified_version/setup/#step-4-verify-database-connection","title":"Step 4: Verify Database Connection","text":""},{"location":"modified_version/setup/#41-edit-the-database-connection-file","title":"4.1 Edit the Database Connection File","text":"<ul> <li>Open the <code>app/settings.php</code> file.</li> <li>Ensure the database connection settings match the following configuration for XAMPP:</li> </ul> <p><code>php   'db' =&gt; [       'host' =&gt; '127.0.0.1',       'port' =&gt; '3306', // XAMPP default MySQL port       'dbname' =&gt; 'giga',       'user' =&gt; 'root',       'pass' =&gt; '' // No password for XAMPP's default MySQL setup   ],</code></p>"},{"location":"modified_version/setup/#42-test-admin-login","title":"4.2 Test Admin Login","text":"<ul> <li>After setting up the database and ensuring the connection is configured correctly, try logging into the system using the following credentials:</li> <li>Email : <code>admin@itu.int</code></li> <li>Password : <code>AdminTools123!</code></li> <li>If the setup is correct, you should be able to log in successfully as super admin.</li> </ul>"},{"location":"modified_version/setup/#step-5-final-checks","title":"Step 5: Final Checks","text":"<ul> <li>Ensure the frontend and backend servers are both running:</li> <li>Frontend : Available at <code>http://localhost:8000</code>.</li> <li>Backend : Available at <code>http://localhost:8080</code>.</li> <li>Verify that the database connection is functioning properly and that you can log in to the system using the provided credentials.</li> </ul>"},{"location":"old_version/prerequisites/","title":"Setup and Run the Old Version of the Calculation Tools","text":"<p>To set up and run the old version of the Calculation Tools, ensure that your environment is properly configured with the following software and tools:</p> <p>Works for Linux, Windows, Mac</p>"},{"location":"old_version/prerequisites/#1-nodejs-and-gulp","title":"1. Node.js and Gulp","text":""},{"location":"old_version/prerequisites/#install-nvm-node-version-manager","title":"Install NVM (Node Version Manager)","text":"<p>Node Version Manager (NVM) allows you to install and manage multiple versions of Node.js on your system. This is particularly useful for this project as it requires Node.js version 10.24.0.</p> <ol> <li> <p>Install NVM:</p> </li> <li> <p>Follow the installation instructions for NVM specific to your operating system:</p> <ul> <li>Windows: Download and install from the NVM for Windows GitHub repository.</li> <li>macOS/Linux: Install using the following command in your terminal:</li> </ul> <p><code>curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh |</code> 2. Install Node.js version 10 using NVM:</p> </li> <li> <p>Once NVM is installed, use it to install Node.js version 10.24.0:</p> <p><code>nvm install 10.24.0</code> 3. Verify available Node.js versions:</p> </li> <li> <p>List all installed versions of Node.js using:</p> <p><code>nvm list</code> 4. Switch to Node.js version 10:</p> </li> <li> <p>Set Node.js version 10.24.0 as the active version:</p> <p><code>nvm use 10</code> 5. Confirm the active Node.js version:</p> </li> <li> <p>Verify that Node.js version 10.24.0 is active:</p> <p><code>node -v</code>    * Ensure the output shows <code>v10.24.0</code>. 6. Install Gulp:</p> </li> <li> <p>Gulp is required for automating tasks and managing workflows. Install it:</p> <p><code>npm install --global gulp-cli@2.3.0  npm install gulp@4.0.2 --save-dev</code></p> </li> </ol>"},{"location":"old_version/prerequisites/#2-python","title":"2. Python","text":""},{"location":"old_version/prerequisites/#python-version-27","title":"Python Version: 2.7","text":"<p>For this project, Python 2.7 is required. Ensure that it is installed and configured on your system.</p> <ol> <li> <p>Install Python 2.7:</p> </li> <li> <p>Download and install Python 2.7 from the Python Releases for Windows page.</p> </li> <li> <p>On macOS/Linux, use your package manager:</p> <p><code>sudo apt-get install python2.7</code>    * Verify the installation:</p> <p><code>python --version</code>    * Ensure the output shows <code>Python 2.7.x</code>.</p> </li> </ol>"},{"location":"old_version/prerequisites/#3-php","title":"3. PHP","text":""},{"location":"old_version/prerequisites/#php-version-73-and-above","title":"PHP Version: 7.3 and Above","text":"<p>PHP is required for various backend functionalities in the old version of the tools. Ensure you have PHP version 7.3 or higher installed.</p> <ol> <li> <p>Install PHP:</p> </li> <li> <p>Download and install PHP from the official PHP website.</p> </li> <li> <p>Alternatively, use a package manager:( Reccomended Approach )</p> <ul> <li>Windows: Use a WAMP or XAMPP stack that includes PHP 7.3 or above.</li> <li>macOS/Linux: Use Homebrew (macOS) or apt-get (Linux):</li> </ul> <p><code>brew install php@7.3</code> <code>sudo apt-get install php7.3</code> 2. Verify PHP Installation:</p> </li> <li> <p>Confirm the PHP version:</p> <p><code>php -v</code>    * Ensure the output shows <code>PHP 7.3.x</code> or higher.</p> </li> </ol>"},{"location":"old_version/setup/","title":"Calculation Tools Setup Guide (Old Version)","text":"<p>This guide provides step-by-step instructions for setting up the old version of the Calculation Tools, both on the client side and the server side.</p> <p>There are 2 sides to this setup:</p> <ul> <li>Client-side setup</li> <li>Server-side setup</li> <li>Database Setup</li> </ul> <p>GETTING STARTED:</p> <pre><code>git clone https://ITUINT@dev.azure.com/ITUINT/ConnectivityToolkit/_git/calculation-tools\n</code></pre>"},{"location":"old_version/setup/#client-side-setup","title":"Client-Side Setup","text":"<p>Follow these steps to set up the client side of the project:</p>"},{"location":"old_version/setup/#summary","title":"Summary","text":"<ol> <li>Navigate to the project root.</li> <li>Install required packages: <code>npm install &amp;&amp; bower install</code></li> <li>Start the application server: <code>gulp serve</code></li> </ol>"},{"location":"old_version/setup/#prerequisites","title":"Prerequisites","text":"<p>For this to load successfully, ensure the following:</p>"},{"location":"old_version/setup/#1-switch-to-nodejs-version-10","title":"1. Switch to Node.js Version 10","text":"<p>Ensure that Node.js version 10 is active in your environment:</p> <pre><code>nvm use 10\n</code></pre>"},{"location":"old_version/setup/#2-confirm-the-active-nodejs-version","title":"2. Confirm the Active Node.js Version","text":"<p>Verify that Node.js version 10.x.x is active by running:</p> <pre><code>node -v\n</code></pre> <p>Ensure the output shows <code>v10.x.x</code>.</p>"},{"location":"old_version/setup/#3-install-required-packages","title":"3. Install Required Packages","text":"<p>Install the necessary packages for the project:</p> <pre><code>npm install &amp;&amp; bower install\n</code></pre>"},{"location":"old_version/setup/#4-handling-gulp-related-issues","title":"4. Handling Gulp-Related Issues","text":"<p>If you encounter issues related to Gulp during installation, particularly with Babel and ES6, refer to the following guide to resolve them: Using ES6 with Gulp</p> <p>After this fix (if you encounter it), confirm if Gulp is set by typing:</p> <pre><code>gulp -v\n</code></pre>"},{"location":"old_version/setup/#5-start-the-development-server","title":"5. Start the Development Server","text":"<p>Once everything is set up, start the development server using Gulp:</p> <pre><code>gulp serve\n</code></pre>"},{"location":"old_version/setup/#important-notes","title":"Important Notes:","text":"<ul> <li>Node Version: Ensure that any new terminal you open for this project uses Node.js version 10.</li> <li>Administrator Mode: Run CMD in administrator mode, especially if you're on Windows 11, to avoid permission issues.</li> </ul>"},{"location":"old_version/setup/#screenshots","title":"Screenshots","text":"<p>This part takes some bit of time, &amp; you will encounter warnings and some light JS errors, but let it process and load till the end.</p> <p></p> <p></p>"},{"location":"old_version/setup/#server-side-setup","title":"Server-Side Setup","text":"<p>Setting up the server side of the project involves configuring PHP and Python and running the necessary commands to start the local server.</p>"},{"location":"old_version/setup/#summary_1","title":"Summary","text":"<p>Required: Docker, RabbitMQ Recommended PHP version: 5.6.25+ Recommended NodeJS version: 7.9.0+ with NPM 4.2.0+</p> <p>Setting up PHP API server:</p> <ol> <li>Navigate to the server directory.</li> <li>Install required packages: <code>php composer.phar install</code></li> <li>Start local server: <code>php composer.phar start</code></li> </ol>"},{"location":"old_version/setup/#prerequisites_1","title":"Prerequisites","text":"<p>For this to load successfully, ensure the following:</p>"},{"location":"old_version/setup/#1-access-the-server-directory","title":"1. Access the Server Directory","text":"<p>Open a new CMD terminal in administrator mode, and navigate to the server directory within the project:</p> <pre><code>cd path\\to\\your\\project\\server\n</code></pre> <p>Example:</p> <pre><code>C:\\Users\\X1 Carbon\\Downloads\\calculation-tools_1&gt;cd server\n</code></pre>"},{"location":"old_version/setup/#2-confirm-versions","title":"2. Confirm Versions","text":"<p>Before proceeding, ensure that the following versions are active:</p> <ul> <li>PHP Version: At least 7.3 (using PHP 8.1.12 with XAMPP). Download XAMPP from Apache Friends.</li> <li>Python Version: Python 2.7. Download it from Python.org.</li> <li>Node.js Version: Ensure Node.js version 10.24.0 is active.</li> </ul>"},{"location":"old_version/setup/#3-install-required-packages_1","title":"3. Install Required Packages","text":"<p>Install the necessary packages for the server side using Composer:</p> <pre><code>php composer.phar install\n</code></pre>"},{"location":"old_version/setup/#4-start-the-local-server","title":"4. Start the Local Server","text":"<p>Once the packages are installed, start the local server:</p> <pre><code>php composer.phar start\n</code></pre>"},{"location":"old_version/setup/#notes","title":"Notes:","text":"<ul> <li>Errors and Warnings: You may encounter a long list of errors and warnings during the server startup, but the server should still run successfully.</li> </ul>"},{"location":"old_version/setup/#screenshots_1","title":"Screenshots","text":"<p>This part takes some bit of time, &amp; you will encounter warnings and some light JS errors, but let it process and load till the end.</p> <p></p> <p></p>"},{"location":"old_version/setup/#database-setup-this-assumes-you-are-using-xampp-and-you-are-running-apache-and-mysql","title":"Database Setup  ( This assumes you are using XAMPP, and you are running Apache and mysql )","text":"<p>Ensure that you have xampp installed. To run it, double click on the xampp icon to open xampp control panel, then start apache and mysql   Use this guide for more help with XAMPP </p>"},{"location":"old_version/setup/#31-access-phpmyadmin","title":"3.1 Access phpMyAdmin","text":"<ul> <li>Go to your browser and type <code>http://localhost/phpmyadmin</code> to access the MySQL administration interface.</li> </ul>"},{"location":"old_version/setup/#32-create-the-database","title":"3.2 Create the Database","text":"<ul> <li>In phpMyAdmin, click on the Databases tab.</li> <li>Create a new database with the following details:</li> <li>Database name : <code>giga</code></li> <li>Username : <code>root</code></li> <li>Password : Leave it blank (default for XAMPP).</li> </ul>"},{"location":"old_version/setup/#33-upload-the-database","title":"3.3 Upload the Database","text":"<ul> <li>Download the SQL file from the following link: Download giga.sql.</li> <li>In phpMyAdmin, select the <code>giga</code> database and click on the Import tab.</li> <li>Choose the <code>giga.sql</code> file you downloaded and click Go to upload the database schema.</li> </ul>"},{"location":"old_version/setup/#step-4-verify-database-connection","title":"Step 4: Verify Database Connection","text":""},{"location":"old_version/setup/#41-edit-the-database-connection-file","title":"4.1 Edit the Database Connection File","text":"<ul> <li>Open the <code>app/settings.php</code> file.</li> <li>Ensure the database connection settings match the following configuration for XAMPP:</li> </ul> <p><code>php   'db' =&gt; [       'host' =&gt; '127.0.0.1',       'port' =&gt; '3306', // XAMPP default MySQL port       'dbname' =&gt; 'giga',       'user' =&gt; 'root',       'pass' =&gt; '' // No password for XAMPP's default MySQL setup   ],</code></p>"},{"location":"old_version/setup/#42-test-admin-login","title":"4.2 Test Admin Login","text":"<ul> <li>After setting up the database and ensuring the connection is configured correctly, try logging into the system using the following credentials:</li> <li>Email : <code>admin@itu.int</code></li> <li>Password : <code>AdminTools123!</code></li> <li>If the setup is correct, you should be able to log in successfully.</li> </ul>"},{"location":"old_version/setup/#step-5-final-checks","title":"Step 5: Final Checks","text":"<ul> <li>Ensure the frontend and backend servers are both running:</li> <li>Frontend : Available at <code>http://localhost:8000</code>.</li> <li>Backend : Available at <code>http://localhost:8080</code>.</li> <li>Verify that the database connection is functioning properly and that you can log in to the system using the provided credentials.</li> </ul> <p>End of Guide</p>"},{"location":"usage/old_version/","title":"Calculation Tools Guide","text":"<p>This guide provides instructions on how to use the Calculation Tools, including how to access the official documentation and how to clone and run the project locally.</p>"},{"location":"usage/old_version/#1-accessing-the-official-documentation","title":"1. Accessing the Official Documentation","text":"<p>The official user documentation for the Calculation Tools is available online. This documentation covers all aspects of using the tools, including step-by-step instructions, troubleshooting tips, and more.</p>"},{"location":"usage/old_version/#official-documentation","title":"Official Documentation","text":"<ul> <li>Access the User Documentation: Calculation Tools User Documentation</li> </ul>"},{"location":"usage/old_version/#2-cloning-and-running-the-project-locally","title":"2. Cloning and Running the Project Locally","text":"<p>If you wish to clone the Calculation Tools user documentation and run it locally, follow the steps below.</p>"},{"location":"usage/old_version/#21-prerequisites","title":"2.1 Prerequisites","text":"<p>Ensure you have the following prerequisites installed on your local machine:</p> <ul> <li>Git: For cloning the repository. (You can also use terminal / CMD / PowerShell)</li> </ul>"},{"location":"usage/old_version/#22-cloning-the-repository","title":"2.2 Cloning the Repository","text":"<ol> <li>Clone the Repository:    To clone the Calculation Tools repository, use the following command in your terminal:</li> </ol> <p><code>git clone https://ITUINT@dev.azure.com/ITUINT/ConnectivityToolkit/_git/CalculationTools_manual_document</code></p> <ol> <li> <p>Navigate to the Project Directory:    After cloning the repository, navigate to the project directory.</p> </li> <li> <p>Open the Documentation:    The documentation is provided as an HTML file. Simply double-click the <code>index.html</code> file to open it in your default web browser.</p> </li> </ol>"}]}